name: QA/Staging Deploy via SST to AWS

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "src/**"
      - "*.json"
      - "*.yaml"
      - "*.config.js"
      - "*.config.ts"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

  dependencies:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Cache Next.js Build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install Pnpm
        run: npm install -g pnpm
      - name: Install project dependencies
        run: pnpm install

  aws-config:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Configure AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

  deploy:
    runs-on: ubuntu-latest
    needs: aws-config
    environment: Staging
    env:
      NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL }}
      NEXT_PUBLIC_CMS_URL: ${{ vars.NEXT_PUBLIC_CMS_URL }}
      NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID }}
      NEXT_PUBLIC_GTAG_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID }}
    steps:
      - name: Set SST Config Secret
        run: npx sst secret set COMMIT_SHA '${{ github.sha }}' --stage staging
      - name: Deploy to AWS with SST
        run: pnpm run deploy:staging

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Clean Up AWS Profile
        run: rm -rf ~/.aws

  create-pr:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Create Pull Request to Production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr create --base production --head main --title "Auto- ${{ github.event.head_commit.message }}" --body "Auto PR from Stage Release"
