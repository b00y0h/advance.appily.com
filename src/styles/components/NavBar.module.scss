@use "sass:color";
@use "@/styles/global/tokens";

.navigation {
  display: flex;
  margin: 0;
  padding-block: 0.2em;

  @media (min-width: tokens.$mq-1100) {
    flex: 1;
  }

  %hamburguer {
    position: relative;
    z-index: tokens.$layer-5;
    background-color: var(--c-button);
    border-color: var(--c-border-1);
    transition: all 0.2s ease-in-out;
    padding: 0.4em;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: tokens.$borderRadius-m;
    border: tokens.$borderWidth-xs solid var(--c-orange-500);
    font-weight: tokens.$fontWeight-semibold;
    cursor: pointer;

    svg {
      width: 2em;
      height: 2em;
      color: var(--c-navy-800);
    }

    &:active {
      background: var(--c-orange-50);
      color: var(--c-orange-700);
      transform: scale(1.1);
    }

    @media (min-width: tokens.$mq-800) {
      &:hover {
        background: var(--c-orange-50);
        color: var(--c-orange-700);
        transform: scale(1.1);
      }
    }

    @media (min-width: tokens.$mq-1100) {
      display: none;
    }
  }

  .hamburgerClose {
    @extend %hamburguer;
  }

  .hamburgerOpen {
    @extend %hamburguer;
    top: clamp(1.5em, 4vw, 1.8em);
    right: clamp(1.5em, 4vw, 2.2em);
    position: fixed;
    z-index: tokens.$layer-999;
    border-color: var(--c-orange-300);
  }

  // Nav Items

  ul {
    display: flex;
    flex-direction: row;
    position: relative;
    list-style: none;
    margin: 0;
    padding: 0;
    top: 0;
    right: 0;
    flex: 1;

    li {
      a {
        display: block;
        padding-inline: clamp(tokens.$padding-m, 2vw, tokens.$padding-l);
        padding-block: clamp(tokens.$padding-s, 3vw, tokens.$padding-m);
        text-decoration: none;
        color: var(--c-bodyPrimary);
        font-size: 1rem;
        font-weight: 500;
        position: relative;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;

        @media (min-width: tokens.$mq-1100) {
          &::after {
            content: "";
            display: block;
            width: 100%;
            height: 0.2em;
            background-color: var(--c-orange-500);
            position: absolute;
            top: -1rem;
            left: 50%;
            opacity: 0;
            transform: translateX(-50%);
            transition: all 0.2s ease-in-out;
          }
        }

        &.active {
          color: var(--c-linkPrimary);
          font-weight: var(--fw-bold);

          &::after {
            bottom: 0;
            opacity: 1;
          }
        }

        &:hover,
        &:focus {
          color: var(--c-linkPrimary);

          &::after {
            top: 0;
            opacity: 1;
          }
        }
      }

      &:last-child {
        margin-inline: auto 0;

        @media (max-width: tokens.$mq-1100) {
          width: 100%;
        }

        a {
          display: block;
        }
      }
    }

    // Mobile Nav

    @media (max-width: tokens.$mq-1100) {
      flex-direction: column;
      position: fixed;

      &.menuOpen {
        display: flex;
        width: 100%;
        height: 100vh;
        max-width: 30rem;
        z-index: tokens.$layer-99;
        padding-top: 5em;

        &::before {
          content: "";
          display: block;
          width: 100vw;
          height: 100vh;
          position: fixed;
          top: 0;
          right: 0;
          background-color: var(--c-bg1);
          opacity: 0.8;
        }

        &::after {
          content: "";
          display: block;
          width: 100%;
          max-width: 30rem;
          height: 100vh;
          position: absolute;
          top: 0;
          background-color: var(--c-bg2);
        }

        li {
          position: relative;
          z-index: tokens.$layer-5;
          border-bottom: 1px solid var(--c-orange-300);

          a {
            color: var(--c-navy-800);

            &:active {
              background: var(--c-orange-200);
            }
          }
        }
      }

      &.menuClosed {
        display: none;
      }
    }
  }

  .externalLink {
    display: flex;
    align-items: center;
    padding-left: 1em;
    position: relative;
    color: var(--c-bodyPrimary);
    text-decoration: none;
    text-align: center;

    @media (min-width: tokens.$mq-1100) {
      flex: 1;
    }

    &::before {
      content: "";
      display: block;
      width: 1px;
      height: 60%;
      background-color: var(--c-border-3);
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
    }

    svg {
      font-size: 1.3em;
      top: 0.1em;
      position: relative;
    }
  }
}
